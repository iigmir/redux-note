{"version":3,"sources":["Intro/logo.svg","store/count/state.js","Form/store.js","store/inputs/action.js","store/count/action.js","Form/index.js","Intro/Article.js","Intro/index.js","RenderInput/index.js","RenderInput/store.js","App/App.js","store/inputs/reducer.js","store/index.js","store/count/reducer.js","utils/serviceWorker.js","index.js"],"names":["module","exports","initial_state","count","REDUCE_STATE","action_to_local","alter_val","val","type","payload","alter_count","Form","this","props","method","className","htmlFor","name","id","value","onChange","event","emit_val","target","onClick","emit_count","React","Component","connect","state","IntroArticle","Intro","src","logo","alt","RenderInput","inputs","App","obj","createStore","combineReducers","action","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,sPCArCC,G,MAAgB,CAClBC,MAAO,IAGLC,EACK,QCELC,EAAkB,CACpBC,UCRqB,SAAAC,GAAG,MAAK,CAC7BC,KAAM,MACNC,QAAS,CAAEF,SDOXG,YEPuB,SAAAP,GAAK,MAAK,CACjCK,KAAMJ,EACNK,QAAS,CAAEN,YCATQ,E,iLACQJ,GAENK,KAAKC,MAAMP,UAAWC,K,iCAEdA,GAERK,KAAKC,MAAMH,YAAaH,K,oCAIxBK,KAAKC,MAAMH,YAAa,K,+BAG3B,IAAD,OACI,OACA,0BAAMI,OAAO,MAAMC,UAAU,eACzB,6BACI,2BAAOC,QAAQ,OAAf,qBACA,2BAAOR,KAAK,OAAOS,KAAK,MAAMC,GAAG,MAAMC,MAAQP,KAAKC,MAAMN,IAAMa,SAAW,SAAAC,GAAK,OAAI,EAAKC,SAAUD,EAAME,OAAOJ,WAEpH,6BACI,2BAAOH,QAAQ,SAAf,uBACA,4BAAQE,GAAG,QAAQV,KAAK,SAASgB,QAAU,SAAAH,GAAK,OAAI,EAAKI,WAAY,EAAKZ,MAAMV,MAAQ,KAAxF,0B,GAvBGuB,IAAMC,WA8BVC,eH/BQ,SAAAC,GAAK,MAAK,CAC7B1B,MAAO0B,EAAM1B,MAAMA,SG8BiBE,EAAzBuB,CAA4CjB,GChB5CmB,E,iLAbP,OACA,iCACI,6CACA,iYACA,wZACA,oOACA,wyBACA,wY,GAVeJ,IAAMC,W,iBCiBlBI,G,uLAXP,OAAS,yBAAKhB,UAAU,SACpB,yBAAKA,UAAU,aACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,cACX,yBAAKiB,IAAMC,IAAOlB,UAAU,WAAWmB,IAAI,e,GARvCR,IAAMC,YCApBQ,G,uLAGE,OACA,yBAAKpB,UAAU,eACX,mDACA,4BACI,oCAAWH,KAAKC,MAAMN,KACtB,sCAAaK,KAAKC,MAAMV,a,GARduB,IAAMC,YAejBC,eCpBQ,SAAAC,GAAK,MAAK,CAC7BtB,IAAKsB,EAAMO,OAAO7B,IAClBJ,MAAO0B,EAAM1B,MAAMA,SAGC,GDeTyB,CAA4CO,GED5CE,E,iLAVP,OACA,yBAAKtB,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPMW,IAAMC,W,eCNlBzB,EAAgB,CAClBK,IAAK,QACL+B,IAAK,ICEMC,cAEXC,YAAgB,CAAEJ,ODDP,WACd,IADgBP,EACjB,uDADyB3B,EAAeuC,EACxC,uCACI,OAASA,EAAOjC,MAEZ,IAAK,MAED,OAAO,eAAKqB,EAAZ,CAAmBtB,IAAKkC,EAAOhC,QAAQF,MAE3C,IAAK,MAED,OAAO,eAAKsB,EAAZ,CAAmBS,IAAKG,EAAOhC,QAAQ6B,MAG3C,QAAS,OAAOT,ICZM1B,MCJf,WACd,IADgB0B,EACjB,uDADyB3B,EAAeuC,EACxC,uCACI,OAASA,EAAOjC,MAEZ,KAAKJ,EAED,OAAO,eAAKyB,EAAZ,CAAmB1B,MAAOsC,EAAOhC,QAAQN,QAG7C,QAAS,OAAO0B,MDHpBa,OAAOC,8BAAgCD,OAAOC,gCEI9BC,QACW,cAA7BF,OAAOG,SAASC,UAEe,UAA7BJ,OAAOG,SAASC,UAEhBJ,OAAOG,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAQA,GACd,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7fc0f6a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c18405ab.svg\";","const initial_state = {\n    count: 0\n};\n\nconst REDUCE_STATE = {\n    COUNT: \"COUNT\",\n};\n\nexport { initial_state, REDUCE_STATE };\n","import { alter_val } from \"../store/inputs/action.js\";\nimport { alter_count } from \"../store/count/action.js\";\n\nconst state_to_local = state => ({\n    count: state.count.count,\n});\n\nconst action_to_local = {\n    alter_val,\n    alter_count\n};\n\nexport { state_to_local, action_to_local };\n","export const alter_val = val => ({\n    type: \"VAL\",\n    payload: { val }\n});\n\nexport const alter_obj = obj => ({\n    type: \"OBJ\",\n    payload: { obj }\n});\n","import { REDUCE_STATE } from \"./state.js\";\n\nexport const alter_count = count => ({\n    type: REDUCE_STATE.COUNT,\n    payload: { count }\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { state_to_local, action_to_local } from \"./store.js\";\n\nclass Form extends React.Component {\n    emit_val( val )\n    {\n        this.props.alter_val( val );\n    }\n    emit_count( val )\n    {\n        this.props.alter_count( val );\n    }\n    reset_count()\n    {\n        this.props.alter_count( 0 );\n    }\n    render()\n    {\n        return (\n        <form method=\"get\" className=\"RenderInput\">\n            <div>\n                <label htmlFor=\"val\">輸入 val </label>\n                <input type=\"text\" name=\"val\" id=\"val\" value={ this.props.val } onChange={ event => this.emit_val( event.target.value ) } />\n            </div>\n            <div>\n                <label htmlFor=\"count\">觸動 count </label>\n                <button id=\"count\" type=\"button\" onClick={ event => this.emit_count( this.props.count + 1 ) }>Add to favorites</button>\n            </div>\n        </form>\n        );\n    }\n}\n\nexport default connect( state_to_local, action_to_local )( Form );\n","import React from \"react\";\n\nclass IntroArticle extends React.Component {\n    render()\n    {\n        return (\n        <article>\n            <h1> Hello Redux </h1>\n            <p>雖然說 Vue 的 vuex 是借鑿 Redux 的；雖然這兩個都是 flux 架構過來的中央管理系統，但這兩個的實做起來卻差很多。直接跳過來的話，會很困惑。</p>\n            <p>首先，在 vuex 裡面，你會直接在 mutations 修改 state 的樣子；但在 Redux 裡面，你必須在 dispatcher function 裡面，提供新的 state 給 Redux，讓他自己用你給的數值，來修改 state。</p>\n            <p>再來，在 Redux 裡面，一個 React app 只能有一個 store。這個 store 必須要在包在 Provider 裡面。</p>\n            <p>再說說模塊吧：Redux 的每個模塊，是以一個 dispatcher 為單位的，而 state 看起來，似乎只是 dispatcher 的附屬變數。但在 vuex 裡面，從 state 到 mutation 的每一個階段，都是獨立的物件。所以開發的時候，我常常會難以理解。所以如果只有一個 store 但你想要把 state 分門別類的話怎麼辦呢？答案是建立一個 dispatcher 然後把 state 弄起來！</p>\n            <p>最後，你必須在輸出 component 時，透過 react-redux 內建的 connect function 把 state, action, component 這三個連結在一起。而不是像 vuex 那樣，一開始就引入 mapAction, mapMutation 之類的。</p>\n        </article>\n        );\n    }\n}\n\nexport default IntroArticle;\n","import React from \"react\";\nimport IntroArticle from \"./Article.js\";\nimport logo from \"./logo.svg\";\nimport \"./index.css\";\n\nclass Intro extends React.Component {\n    render()\n    {\n        return ( <div className=\"Intro\">\n            <div className=\"left item\">\n                <IntroArticle />\n            </div>\n            <div className=\"right item\">\n                <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n            </div>\n        </div> );\n    }\n}\n\nexport default Intro;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./index.css\";\nimport { state_to_local, action_to_local } from \"./store.js\";\n\nclass RenderInput extends React.Component {\n    render()\n    {\n        return (\n        <div className=\"RenderInput\">\n            <h1>輸出 state:</h1>\n            <ul>\n                <li>val: { this.props.val }</li>\n                <li>count: { this.props.count }</li>\n            </ul>\n        </div>\n        );\n    }\n}\n\nexport default connect( state_to_local, action_to_local )( RenderInput );\n\n","const state_to_local = state => ({\n    val: state.inputs.val,\n    count: state.count.count,\n});\n\nconst action_to_local = {};\n\nexport { state_to_local, action_to_local };\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"../Form/index.js\";\nimport Intro from \"../Intro/index.js\";\nimport RenderInput from \"../RenderInput/index.js\";\n\nclass App extends React.Component {\n    render()\n    {\n        return (\n        <div className=\"App\">\n            <Intro />\n            <RenderInput />\n            <Form />\n        </div>\n        );\n    }\n}\n\nexport default App;\n","const initial_state = {\n    val: \"Hello\",\n    obj: {}\n};\n\nexport default ( state = initial_state, action ) =>\n{\n    switch ( action.type )\n    {\n        case \"VAL\":\n        {\n            return { ...state, val: action.payload.val };\n        }\n        case \"OBJ\":\n        {\n            return { ...state, obj: action.payload.obj };\n        }\n        // Reset\n        default: return state;\n    }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport inputs from \"./inputs/reducer.js\";\nimport count from \"./count/reducer.js\";\n\nexport default createStore(\n    // Reducers\n    combineReducers({ inputs, count }),\n    // Redux devtool\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { initial_state, REDUCE_STATE } from \"./state.js\";\n\nexport default ( state = initial_state, action ) =>\n{\n    switch ( action.type )\n    {\n        case REDUCE_STATE.COUNT:\n        {\n            return { ...state, count: action.payload.count };\n        }\n        // Reset\n        default: return state;\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App/App.js\";\nimport store from \"./store/index.js\";\nimport * as serviceWorker from \"./utils/serviceWorker.js\";\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}